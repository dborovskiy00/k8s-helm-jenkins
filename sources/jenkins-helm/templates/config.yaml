---
apiVersion: v1
kind: ConfigMap
metadata:
  name: basic-security
  namespace: "{{ .Values.namespace }}"
data:
  basic-security.groovy: |
    #!groovy
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    println "--> creating local user 'admin'"
    def password = System.getenv("PASS")
    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount('admin', password)
    instance.setSecurityRealm(hudsonRealm)
    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    strategy.setAllowAnonymousRead(true)
    instance.setAuthorizationStrategy(strategy)
    instance.save()
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-config
  namespace: "{{ .Values.namespace }}"
data:
  jenkins.yaml: |
    jenkins:
      numExecutors: 2
      clouds:
      - kubernetes:
          containerCapStr: "10"
          maxRequestsPerHostStr: "32"
          jenkinsUrl: "http://jenkins:8080"
          name: "kubernetes"
          namespace: "{{ .Values.namespace }}"
          skipTlsVerify: true
    credentials:
      system:
        domainCredentials:
        - credentials:
          - usernamePassword:
              description: "Githubuser"
              id: "some_randome"
              password: "QwertY_13"
              scope: GLOBAL
              username: "git_hub_user"
    unclassified:
      location:
        adminAddress: "pluhin@gmail.com"
        url: "http://{{ .Values.ingress.host }}/"
      shell:
        shell: "/bin/bash"
